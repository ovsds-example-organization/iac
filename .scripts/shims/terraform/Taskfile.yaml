version: 3

silent: true

vars:
  TERRAFORM_BINARY_FOLDER: "{{.TASKFILE_DIR}}/bin"
  TERRAFORM_BINARY_PATH: "{{.TASKFILE_DIR}}/bin/terraform"
  TERRAFORM_RC_FILE_PATH: "{{.TASKFILE_DIR}}/terraform.hcl"

  TERRAFORM_ARCHIVE_PATH: "{{.TASKFILE_DIR}}/bin/terraform.zip"
  TERRAFORM_BASE_DOWNLOAD_URL: https://hashicorp-releases.yandexcloud.net/terraform
  TERRAFORM_VERSION: 1.7.5
  TERRAFORM_ARCH:
    sh: uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/' # x86_64 -> amd64, aarch64 -> arm64
  TERRAFORM_PLATFORM:
    sh: tr '[:upper:]' '[:lower:]' <<< "$(uname)" # Linux -> linux, Darwin -> darwin

  TERRAFORM_PLUGIN_CACHE: ~/.terraform.d/plugin-cache

tasks:
  run:
    desc: Run terraform command
    cmds:
      - task: init
      - "{{.TERRAFORM_BINARY_PATH}} {{.COMMAND}} {{.CLI_ARGS}}"
    env:
      TF_CLI_CONFIG_FILE: "{{.TERRAFORM_RC_FILE_PATH}}"

  init:
    desc: Initialize environment
    cmds:
      - task: clean
      - echo "Downloading terraform binary version({{.TERRAFORM_VERSION}}) arch({{.TERRAFORM_ARCH}}) platform({{.TERRAFORM_PLATFORM}})..."
      - mkdir -p {{.TERRAFORM_BINARY_FOLDER}}
      - mkdir -p {{.TERRAFORM_PLUGIN_CACHE}}
      - curl --location --output {{.TERRAFORM_ARCHIVE_PATH}} "{{.ARCHIVE_URL}}"
      - defer: rm {{.TERRAFORM_ARCHIVE_PATH}}
      - unzip {{.TERRAFORM_ARCHIVE_PATH}} -d {{.TERRAFORM_BINARY_FOLDER}}
      - chmod +x {{.TERRAFORM_BINARY_PATH}}
    vars:
      ARCHIVE_URL: "{{.TERRAFORM_BASE_DOWNLOAD_URL}}/{{.TERRAFORM_VERSION}}/terraform_{{.TERRAFORM_VERSION}}_{{.TERRAFORM_PLATFORM}}_{{.TERRAFORM_ARCH}}.zip"
    status:
      - ! test {{.TERRAFORM_BINARY_PATH}}
      - "[ $({{.TERRAFORM_BINARY_PATH}} --version | grep -o 'v[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+') == 'v{{.TERRAFORM_VERSION}}' ]"

  clean:
    desc: Clean environment
    cmds:
      - echo "Cleaning terraform binary..."
      - rm -rf {{.TERRAFORM_BINARY_FOLDER}}

      - echo "Cleaning terraform plugin cache..."
      - rm -rf {{.TERRAFORM_PLUGIN_CACHE}}
